{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regex","NewMovie","state","imgUrlValid","imdbUrlValid","isValidImgUrl","setState","test","isValidImdbUrl","handlerSumbit","event","preventDefault","props","addMovie","this","onSubmit","type","value","placeholder","required","onChange","target","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9267e815.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlValid: true,\n    imdbUrlValid: true,\n  };\n\n  isValidImgUrl = () => {\n    this.setState(state => ({\n      imgUrlValid: regex.test(state.imgUrl),\n    }));\n  }\n\n  isValidImdbUrl = () => {\n    this.setState(state => ({\n      imdbUrlValid: regex.test(state.imdbUrl),\n    }));\n  }\n\n  handlerSumbit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    } = this.state;\n\n    this.props.addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrlValid: true,\n      imdbUrlValid: true,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n      imgUrlValid,\n      imdbUrlValid,\n    } = this.state;\n\n    return (\n      <div className=\"field\">\n\n        <h2 className=\"title\">Add movie</h2>\n\n        <form\n          className=\"form\"\n          onSubmit={this.handlerSumbit}\n        >\n          <input\n            className=\"input \"\n            type=\"text\"\n            value={title}\n            placeholder=\"Title\"\n            required\n            onChange={event => (\n              this.setState({\n                title: event.target.value,\n              })\n            )}\n          />\n\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={description}\n            placeholder=\"Description\"\n            required\n            onChange={event => (\n              this.setState({\n                description: event.target.value,\n              })\n            )}\n          />\n\n          <input\n            className={\n              imgUrlValid\n                ? 'input'\n                : 'input is-danger'\n            }\n            type=\"text\"\n            value={imgUrl}\n            placeholder=\"Image Url\"\n            required\n            onChange={(event) => {\n              this.setState({\n                imgUrl: event.target.value,\n              });\n              this.isValidImgUrl();\n            }}\n          />\n          {\n            !imgUrlValid && (\n              <span className=\"help is-danger\">\n                Url invalid\n              </span>\n            )\n          }\n\n          <input\n            className={\n              imdbUrlValid\n                ? 'input '\n                : 'input is-danger'\n            }\n            type=\"text\"\n            value={imdbUrl}\n            placeholder=\"Image Url\"\n            required\n            onChange={(event) => {\n              this.setState({\n                imdbUrl: event.target.value,\n              });\n              this.isValidImdbUrl();\n            }}\n          />\n          {\n            !imdbUrlValid && (\n              <span className=\"help is-danger\">\n                Url invalid\n              </span>\n            )\n          }\n          <input\n            className=\"input \"\n            type=\"text\"\n            value={imdbId}\n            placeholder=\"Id\"\n            required\n            onChange={event => (\n              this.setState({\n                imdbId: event.target.value,\n              })\n            )}\n          />\n          <button\n            className=\"button is-primary is-outlined\"\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}